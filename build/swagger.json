{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"DefaultSelection_Prisma._36_ProductPayload_": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"userId": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"description": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"userId",
					"price",
					"description",
					"id",
					"name"
				],
				"type": "object"
			},
			"ProductResponse": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"userId": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"description": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"user": {
						"properties": {
							"email": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"email",
							"name",
							"id"
						],
						"type": "object"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"userId",
					"price",
					"description",
					"id",
					"name",
					"user"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ErrorResponse": {
				"properties": {
					"error": {
						"type": "string"
					}
				},
				"required": [
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateProductResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"product": {
						"$ref": "#/components/schemas/ProductResponse"
					}
				},
				"required": [
					"message",
					"product"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateProductRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"price"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateProductResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"product": {
						"$ref": "#/components/schemas/ProductResponse"
					}
				},
				"required": [
					"message",
					"product"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateProductRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DeleteProductResponse": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LineMessage": {
				"properties": {
					"id": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"text",
							"image",
							"video",
							"audio",
							"file",
							"location",
							"sticker"
						]
					},
					"text": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LineEvent": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"message",
							"follow",
							"unfollow",
							"postback"
						]
					},
					"replyToken": {
						"type": "string"
					},
					"source": {
						"properties": {
							"roomId": {
								"type": "string"
							},
							"groupId": {
								"type": "string"
							},
							"userId": {
								"type": "string"
							},
							"type": {
								"type": "string",
								"enum": [
									"user",
									"group",
									"room"
								]
							}
						},
						"required": [
							"type"
						],
						"type": "object"
					},
					"timestamp": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"$ref": "#/components/schemas/LineMessage"
					}
				},
				"required": [
					"type",
					"replyToken",
					"source",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LineWebhookRequest": {
				"properties": {
					"destination": {
						"type": "string"
					},
					"events": {
						"items": {
							"$ref": "#/components/schemas/LineEvent"
						},
						"type": "array"
					}
				},
				"required": [
					"destination",
					"events"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DefaultSelection_Prisma._36_RolePayload_": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"id",
					"name"
				],
				"type": "object"
			},
			"Role": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_RolePayload_",
				"description": "Model Role"
			},
			"Pick_User.Exclude_keyofUser.password__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"email": {
						"type": "string"
					},
					"lineId": {
						"type": "string"
					},
					"roleId": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"id",
					"createdAt",
					"updatedAt",
					"email",
					"lineId",
					"roleId"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserWithoutPassword": {
				"properties": {
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"email": {
						"type": "string"
					},
					"lineId": {
						"type": "string"
					},
					"roleId": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					}
				},
				"required": [
					"name",
					"id",
					"createdAt",
					"updatedAt",
					"email",
					"lineId",
					"roleId",
					"role"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RegisterResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"token": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/UserWithoutPassword"
					}
				},
				"required": [
					"message",
					"token",
					"user"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RegisterRequest": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoginResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"token": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/UserWithoutPassword"
					}
				},
				"required": [
					"message",
					"token",
					"user"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoginRequest": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MeResponse": {
				"properties": {
					"user": {
						"$ref": "#/components/schemas/UserWithoutPassword"
					}
				},
				"required": [
					"user"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header",
				"description": "JWT authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
			}
		}
	},
	"info": {
		"title": "LINE Backend API",
		"version": "1.0.0",
		"description": "Backend API with Prisma, JWT Auth, and LINE integration",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "Backend Team"
		}
	},
	"paths": {
		"/products": {
			"get": {
				"operationId": "getAllProducts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ProductResponse"
									},
									"type": "array"
								},
								"examples": {
									"Example 1": {
										"value": [
											{
												"id": "product-id",
												"name": "Sample Product",
												"description": "A sample product",
												"price": 99.99,
												"userId": "user-id",
												"createdAt": "2025-08-22T06:11:34.390Z",
												"updatedAt": "2025-08-22T06:11:34.391Z",
												"user": {
													"id": "user-id",
													"name": "John Doe",
													"email": "john@example.com"
												}
											}
										]
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Products"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "createProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreateProductResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Product created successfully",
											"product": {
												"id": "product-id",
												"name": "New Product",
												"description": "A new product",
												"price": 29.99,
												"userId": "user-id",
												"createdAt": "2025-08-22T06:11:34.397Z",
												"updatedAt": "2025-08-22T06:11:34.397Z",
												"user": {
													"id": "user-id",
													"name": "Admin User",
													"email": "admin@example.com"
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - Admin role required",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Products"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateProductRequest"
							}
						}
					}
				}
			}
		},
		"/products/{id}": {
			"get": {
				"operationId": "getProductById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProductResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": "product-id",
											"name": "Sample Product",
											"description": "A sample product",
											"price": 99.99,
											"userId": "user-id",
											"createdAt": "2025-08-22T06:11:34.394Z",
											"updatedAt": "2025-08-22T06:11:34.394Z",
											"user": {
												"id": "user-id",
												"name": "John Doe",
												"email": "john@example.com"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Product not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Products"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "updateProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UpdateProductResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Product updated successfully",
											"product": {
												"id": "product-id",
												"name": "Updated Product",
												"description": "An updated product",
												"price": 39.99,
												"userId": "user-id",
												"createdAt": "2025-08-22T06:11:34.400Z",
												"updatedAt": "2025-08-22T06:11:34.400Z",
												"user": {
													"id": "user-id",
													"name": "Admin User",
													"email": "admin@example.com"
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - Admin role required",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Product not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Products"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateProductRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteProductResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Product deleted successfully"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - Admin role required",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Product not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Products"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/line/callback": {
			"get": {
				"operationId": "lineCallback",
				"responses": {
					"204": {
						"description": "No content"
					},
					"302": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"location": {
											"type": "string"
										}
									},
									"required": [
										"location"
									],
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request - No code provided",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"LINE Integration"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "code",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "state",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/line/webhook": {
			"post": {
				"operationId": "lineWebhook",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Webhook processed successfully"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"LINE Integration"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LineWebhookRequest"
							}
						}
					}
				}
			}
		},
		"/auth/register": {
			"post": {
				"operationId": "register",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RegisterResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "User created successfully",
											"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
											"user": {
												"id": "user-id",
												"email": "user@example.com",
												"name": "John Doe",
												"lineId": null,
												"roleId": "role-id",
												"createdAt": "2025-08-22T06:11:34.427Z",
												"updatedAt": "2025-08-22T06:11:34.427Z",
												"role": {
													"id": "role-id",
													"name": "USER",
													"createdAt": "2025-08-22T06:11:34.427Z",
													"updatedAt": "2025-08-22T06:11:34.427Z"
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegisterRequest"
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LoginResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Login successful",
											"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
											"user": {
												"id": "user-id",
												"email": "user@example.com",
												"name": "John Doe",
												"lineId": null,
												"roleId": "role-id",
												"createdAt": "2025-08-22T06:11:34.429Z",
												"updatedAt": "2025-08-22T06:11:34.429Z",
												"role": {
													"id": "role-id",
													"name": "USER",
													"createdAt": "2025-08-22T06:11:34.429Z",
													"updatedAt": "2025-08-22T06:11:34.429Z"
												}
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Invalid credentials",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginRequest"
							}
						}
					}
				}
			}
		},
		"/auth/me": {
			"get": {
				"operationId": "getCurrentUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MeResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"user": {
												"id": "user-id",
												"email": "user@example.com",
												"name": "John Doe",
												"lineId": null,
												"roleId": "role-id",
												"createdAt": "2025-08-22T06:11:34.431Z",
												"updatedAt": "2025-08-22T06:11:34.431Z",
												"role": {
													"id": "role-id",
													"name": "USER",
													"createdAt": "2025-08-22T06:11:34.431Z",
													"updatedAt": "2025-08-22T06:11:34.431Z"
												}
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "https://[object Object]/"
		}
	]
}